import java.nio.file.Path
import java.nio.file.Paths

tasks.register("checkForLiferayLicense") {
	onlyIf {
		config.useLiferay && config.liferayDXPImage
	}

	doFirst {
		FileCollection licenseXmlFileCollection = project.fileTree("configs") {
			include "**/osgi/modules/*.xml"
		}.filter {
			it.text.contains("<license>")
		}

		if (licenseXmlFileCollection.isEmpty()) {
			throw new GradleException("Please add a license to configs/common/osgi/modules/")
		}
	}
}

tasks.register("listAdminUsers") {
	onlyIf {
		config.useDatabase
	}

	doFirst {
		forEachCompanyId {
			String companyId, String hostname, String webId, String schema ->

			List results = executeSQLQuery("select screenName, emailAddress from User_ where companyId = ${companyId} and userId in (select userId from Users_Roles where roleId in (select roleId from Role_ where name = 'Administrator'))", schema)

			println "\nhttp://${hostname}:8080/c/portal/login"
			println "http://${hostname}:8080/?p_p_id=com_liferay_login_web_portlet_LoginPortlet&p_p_lifecycle=0&p_p_state=exclusive&p_p_mode=view&_com_liferay_login_web_portlet_LoginPortlet_mvcRenderCommandName=%2Flogin%2Flogin&saveLastPath=false"
			println getDatabaseAccessCommand(schema)

			if (results.isEmpty()) {
				println "Unable to detect users explicitly granted the Administrator role"
			}
			else {
				println "Detected the following users explicitly granted the Administrator role"

				results.each {
					println " - ${it["screenName"]} (${it["emailAddress"]})"
				}
			}
		}
	}
}